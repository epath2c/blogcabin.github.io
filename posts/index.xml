<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Aria Hu&#39;s Blog</title>
    <link>https://epath2c.github.io/blogcabin.github.io/posts/</link>
    <description>Recent content in Posts on Aria Hu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Oct 2021 00:30:03 +0000</lastBuildDate><atom:link href="https://epath2c.github.io/blogcabin.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Algorithm Practice 2 - Singly Linked List</title>
      <link>https://epath2c.github.io/blogcabin.github.io/posts/algotrithm2/</link>
      <pubDate>Sat, 23 Oct 2021 00:30:03 +0000</pubDate>
      
      <guid>https://epath2c.github.io/blogcabin.github.io/posts/algotrithm2/</guid>
      <description>Question is here
My Study Note:
I didn&amp;rsquo;t solve this problem at the first try, actually, I didn&amp;rsquo;t understand this problem at all because I was still confused about the data structuresingly linked list.
The approach I learned from this original solution
var mergeTwoLists = function(l1, l2) { let list = {value: null, next: null}; temp = list; while(l1 &amp;amp;&amp;amp; l2){ if(l1.val&amp;lt; l2.val){ temp.next = l1 l1= l1.next } else{ temp.</description>
    </item>
    
    <item>
      <title>Steps of One Simple CRUD</title>
      <link>https://epath2c.github.io/blogcabin.github.io/posts/restfulpractice/</link>
      <pubDate>Sat, 23 Oct 2021 00:30:03 +0000</pubDate>
      
      <guid>https://epath2c.github.io/blogcabin.github.io/posts/restfulpractice/</guid>
      <description>This article is based on John Smilga&amp;rsquo;s JS project Grocery Bud.
I summarize these steps to keep a reference of how to write full CRUD for my later study.
 Select all the needed elements (including get some pseudo ID) Start working on submitting form:(this eventListener callback function is written somewhere else, like, all the functions are written together so that we can manage the code more clearly.)  Three conditions:  What if we have value and the action is not edit What if we have value and the action is edit What if we don&amp;rsquo;t provide any value?</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://epath2c.github.io/blogcabin.github.io/posts/test/</link>
      <pubDate>Sat, 23 Oct 2021 00:30:03 +0000</pubDate>
      
      <guid>https://epath2c.github.io/blogcabin.github.io/posts/test/</guid>
      <description>格式参考 GitHub Pages action，可以根据自己需要，按照说明文档上的建议对上面的配置进一步调整。
提交 commit，保存！之后会发现 action 在尝试运行，等待不到一分钟结果就会出来，变成绿色就说明成功啦！
这时跑去公开仓库瞅瞅看，应该已经可以看到自动建了一个名为 gh-pages 的分支，里面出现了许多东西，此时打开你的博客域名应该已经可以看到博客内容啦！
如果 github action 没成功跑起来也不要慌，点进 deploy 详细看下报错，一般都可以根据报错内容发现原因，对应去调整后再跑几遍即可。
自定义域名注意事项 博客根目录下的 config 文件中 base url 更换为自定义域名 为自定义域名添加了 CNAME 记录（顶级域名也可添加四条 A 记录），详见 github 官方说明：Managing a custom domain for your GitHub Pages site 部署成功后，进入公开仓库 settings，pages 页面添加自定义域名，等待 DNS 检验成功 如果使用了 CDN（比如 cloudflare），github 上的强制 https 按钮可能不能点；cloudflare 免费提供 https 证书，如果无法正常显示 https，可以建立强制 https 规则 不适用 CDN 的情况下，github 已支持为自定义域名办法 let’s encrypt 证书，稍等一会儿即可生效 ✧ 部署完成后续管理</description>
    </item>
    
    <item>
      <title>How to make dynamic navbar?</title>
      <link>https://epath2c.github.io/blogcabin.github.io/posts/dynamicnavbar/</link>
      <pubDate>Wed, 20 Oct 2021 11:30:03 +0000</pubDate>
      
      <guid>https://epath2c.github.io/blogcabin.github.io/posts/dynamicnavbar/</guid>
      <description>This article is based on the Scroll project here.
Intro In CSS, the conainer height is set to 0 dy default, because we don&amp;rsquo;t wanna show the container when we first load the page. We want to use the toggle button to control whether to show it or not. That&amp;rsquo;s also how we use toggle method. In CSS, we set the style of class .show-links to be height of 200, so when we add this class by using event listener, we will see the links.</description>
    </item>
    
    <item>
      <title>Algorithm Practice 1</title>
      <link>https://epath2c.github.io/blogcabin.github.io/posts/algorithm1/</link>
      <pubDate>Tue, 19 Oct 2021 11:30:03 +0000</pubDate>
      
      <guid>https://epath2c.github.io/blogcabin.github.io/posts/algorithm1/</guid>
      <description>1. Remove Duplicates from Sorted Array Link: https://leetcode.com/problems/remove-duplicates-from-sorted-array/
My first solution:
var removeDuplicates = function(nums) { if(nums.length === 0) return null; let i = 0; let j= i+1; let k = 0; while (j &amp;lt; nums.length){ while(nums[i] === nums[j]){ nums.splice(j, 1); k ++; } i ++; j ++; } }; Refactored version:
var removeDuplicates = function(nums) { if(nums.length === 0) return 0; let i = 0; for(let j=1; j&amp;lt;nums.length; j ++) { if(nums[i] !</description>
    </item>
    
    <item>
      <title>How to build dynamic HTML elements with vanilla JS?</title>
      <link>https://epath2c.github.io/blogcabin.github.io/posts/dynamichtmlbyjs/</link>
      <pubDate>Sun, 17 Oct 2021 11:55:03 +0000</pubDate>
      
      <guid>https://epath2c.github.io/blogcabin.github.io/posts/dynamichtmlbyjs/</guid>
      <description>Here is the summary of some tricks from John Smilga&amp;rsquo;s JS projects. This post is depending on &amp;lsquo;Menu&amp;rsquo;.
 INTRO: While building simple project, it seems ok to hard-code some elements, like the buttons here. But in the real world, it would be better to dynamically render buttons due to the data we fetched from some database.    Use vanilla JS to load content when the DOM was first rendered.</description>
    </item>
    
  </channel>
</rss>
